---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/api/v1/users":
    get:
      summary: Lists all client users
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: users found
        '403':
          description: forbidden for non-admin users
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                    password_confirmation:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
                  - password_confirmation
  "/api/v1/sessions":
    post:
      summary: Authenticates user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user authenticated
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a user
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: user found
        '404':
          description: user not found
    patch:
      summary: Updates a user
      tags:
      - Users
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: user updated
        '403':
          description: forbidden for non-admin users
        '404':
          description: user not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
    delete:
      summary: Deletes a user
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: user deleted
        '403':
          description: forbidden for non-admin users
        '404':
          description: user not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
